// pages/api/test-env.js

export default async function handler(req, res) {
  try {
    const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
    const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

    // Log c√¥t√© serveur (appara√Æt dans les logs Vercel)
    console.log("üîç V√©rification des variables d'environnement...");
    console.log("NEXT_PUBLIC_SUPABASE_URL:", url ? "‚úÖ OK" : "‚ùå ABSENTE");
    console.log("SUPABASE_SERVICE_ROLE_KEY:", serviceKey ? "‚úÖ OK" : "‚ùå ABSENTE");

    // R√©ponse c√¥t√© navigateur
    if (!url || !serviceKey) {
      return res.status(500).json({
        status: "‚ùå Erreur",
        message: "Une ou plusieurs variables sont manquantes sur le serveur.",
        NEXT_PUBLIC_SUPABASE_URL: !!url,
        SUPABASE_SERVICE_ROLE_KEY: !!serviceKey,
      });
    }

    return res.status(200).json({
      status: "‚úÖ Succ√®s",
      message: "Toutes les variables d'environnement sont bien d√©tect√©es sur le serveur.",
      NEXT_PUBLIC_SUPABASE_URL: url,
      SUPABASE_SERVICE_ROLE_KEY: "‚úÖ D√©tect√©e (cach√©e pour s√©curit√©)",
    });
  } catch (error) {
    console.error("üî• Erreur test-env:", error);
    return res.status(500).json({ error: error.message });
  }
}
